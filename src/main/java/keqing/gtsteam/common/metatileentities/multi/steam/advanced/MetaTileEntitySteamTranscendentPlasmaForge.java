package keqing.gtsteam.common.metatileentities.multi.steam.advanced;

import gregtech.api.capability.impl.SteamMultiWorkable;
import gregtech.api.metatileentity.MetaTileEntity;
import gregtech.api.metatileentity.interfaces.IGregTechTileEntity;
import gregtech.api.metatileentity.multiblock.IMultiblockPart;
import gregtech.api.metatileentity.multiblock.RecipeMapSteamMultiblockController;
import gregtech.api.pattern.BlockPattern;
import gregtech.api.pattern.FactoryBlockPattern;
import gregtech.api.recipes.RecipeMaps;
import gregtech.api.unification.material.Materials;
import gregtech.client.renderer.ICubeRenderer;
import gregtech.client.renderer.texture.Textures;
import gregtech.client.utils.TooltipHelper;
import gregtech.common.ConfigHolder;
import gregtech.common.blocks.BlockFireboxCasing;
import gregtech.common.blocks.BlockMetalCasing;
import gregtech.common.blocks.MetaBlocks;
import net.minecraft.block.state.IBlockState;
import net.minecraft.client.resources.I18n;
import net.minecraft.item.ItemStack;
import net.minecraft.util.ResourceLocation;
import net.minecraft.world.World;
import net.minecraftforge.fml.relauncher.Side;
import net.minecraftforge.fml.relauncher.SideOnly;

import java.util.List;

import static gregtech.client.renderer.texture.Textures.BRONZE_PLATED_BRICKS;
import static gregtech.client.renderer.texture.Textures.SOLID_STEEL_CASING;
import static gregtech.common.blocks.BlockBoilerCasing.BoilerCasingType.BRONZE_PIPE;
import static gregtech.common.blocks.BlockBoilerCasing.BoilerCasingType.STEEL_PIPE;

public class MetaTileEntitySteamTranscendentPlasmaForge extends RecipeMapSteamMultiblockController {

    private static final int PARALLEL_LIMIT = 32768;

    public MetaTileEntitySteamTranscendentPlasmaForge(ResourceLocation metaTileEntityId) {
        super(metaTileEntityId, RecipeMaps.FURNACE_RECIPES, CONVERSION_RATE);
        this.recipeMapWorkable = new SteamMultiWorkable(this, CONVERSION_RATE);
        this.recipeMapWorkable.setParallelLimit(PARALLEL_LIMIT);
    }

    @Override
    public MetaTileEntity createMetaTileEntity(IGregTechTileEntity metaTileEntityHolder) {
        return new MetaTileEntitySteamTranscendentPlasmaForge(metaTileEntityId);
    }

    @Override
    protected BlockPattern createStructurePattern() {
        return FactoryBlockPattern.start()
                .aisle(" NNN   NNN             NNN   NNN " ,"                                 " ,"                                 " ,"                                 " ," NNN   NNN             NNN   NNN " ,"                                 " ,"                                 " ,"                                 " ,"                                 " ,"                                 " ," NNN   NNN             NNN   NNN " ,"                                 " ,"                                 " ,"                                 " ," NNN   NNN   N     N   NNN   NNN " ,"         N   N     N   N         " ,"         N   N     N   N         " ,"                                 " ,"                                 " ,"                                 " ,"         N   N     N   N         " ,"         N   N     N   N         " ,"         N   N     N   N         " ,"                                 ")
                .aisle("NbbbN NbbbN    N N    NbbbN NbbbN" ," CCC   CCC             CCC   CCC " ," CCC   CCC             CCC   CCC " ," CCC   CCC             CCC   CCC " ,"NbbbN NbbbN           NbbbN NbbbN" ,"  N     N               N     N  " ,"  N     N               N     N  " ,"                                 " ,"  N     N               N     N  " ,"  N     N               N     N  " ,"NbbbN NbbbN           NbbbN NbbbN" ," CCC   CCC             CCC   CCC " ," CCC   CCC             CCC   CCC " ," CCC   CCC   N     N   CCC   CCC " ,"NbbbN NbbNCCCb     bCCCNbbN NbbbN" ,"         bCCCb     bCCCb         " ,"         bCCCb     bCCCb         " ,"         N   N     N   N         " ,"                                 " ,"         N   N     N   N         " ,"         bCCCb     bCCCb         " ,"         bCCCb     bCCCb         " ,"         bCCCb     bCCCb         " ,"         N   N     N   N         ")
                .aisle("NbbbN NbbbNNNNNsNsNNNNNbbbN NbbbN" ," CbC   CbC             CbC   CbC " ," CbC   CbC             CbC   CbC " ," CbC   CbC             CbC   CbC " ,"NbbbN NbbbN           NbbbN NbbbN" ," NNN   NNN             NNN   NNN " ," NNN   NNN             NNN   NNN " ,"  s     s               s     s  " ," NNN   NNN             NNN   NNN " ," NNN   NNN             NNN   NNN " ,"NbbbN NbbbN           NbbbN NbbbN" ," CbC   CbC             CbC   CbC " ," CbC   CbC             CbC   CbC " ," CbC   CbC   N     N   CbC   CbC " ,"NbbbN NbbNCCCb     bCCCNbbN NbbbN" ,"  N     sbbbbbNNsNNbbbbbs     N  " ,"  N      bCCCb     bCCCb      N  " ,"  N      N   N     N   N      N  " ,"   s                         s   " ,"   s     N   N     N   N     s   " ,"    ss   bCCCb     bCCCb   ss    " ,"      NNNbbbbbNNsNNbbbbbNNN      " ,"         bCCCb     bCCCb         " ,"         N   N     N   N         ")
                .aisle("NbbbNNNbbbN    NbN    NbbbNNNbbbN" ," CCCCCCCCC             CCCCCCCCC " ," CCCCCCCCC             CCCCCCCCC " ," CCCCCCCCC             CCCCCCCCC " ,"NbbbNNNbbbN           NbbbNNNbbbN" ,"  N     N               N     N  " ,"  N     N               N     N  " ,"                                 " ,"  N     N               N     N  " ,"  N     N               N     N  " ,"NbbbNNNbbbN           NbbbNNNbbbN" ," CCCCCCCCC             CCCCCCCCC " ," CCCCCCCCC             CCCCCCCCC " ," CCCCCCCCC   N     N   CCCCCCCCC " ,"NbbbNNNbbNCCCb     bCCCNbbNNNbbbN" ,"         bCCCb     bCCCb         " ,"         bCCCb     bCCCb         " ,"         NCCCN     NCCCN         " ,"  s      NCCCN     NCCCN      s  " ,"  s      NCCCN     NCCCN      s  " ,"         bCCCb     bCCCb         " ,"    ss   bCCCb     bCCCb   ss    " ,"         bCCCb     bCCCb         " ,"         N   N     N   N         ")
                .aisle(" NNN   NNN     NbN     NNN   NNN " ,"   C   C                 C   C   " ,"   C   C                 C   C   " ,"   C   C                 C   C   " ," NNN   NNN             NNN   NNN " ,"                                 " ,"                                 " ,"                                 " ,"                                 " ,"                                 " ," NNN   NNN             NNN   NNN " ,"   C   C                 C   C   " ,"   C   C                 C   C   " ,"   C   C                 C   C   " ," NNN   NN    N     N    NN   NNN " ,"         N   N     N   N         " ,"         NCCCN     NCCCN         " ,"                                 " ,"                                 " ,"                                 " ,"  s      NCCCN     NCCCN      s  " ,"   s     N   N     N   N     s   " ,"         N   N     N   N         " ,"                                 ")
                .aisle("   N   N       NbN       N   N   " ,"   C   C                 C   C   " ,"   C   C                 C   C   " ,"   C   C                 C   C   " ,"   N   N                 N   N   " ,"                                 " ,"                                 " ,"                                 " ,"                                 " ,"                                 " ,"   N   N                 N   N   " ,"   C   C                 C   C   " ,"   C   C                 C   C   " ,"   C   C                 C   C   " ,"   N   N                 N   N   " ,"                                 " ,"         NCCCN     NCCCN         " ,"                                 " ,"                                 " ,"                                 " ,"  s      NCCCN     NCCCN      s  " ,"   s                         s   " ,"                                 " ,"                                 ")
                .aisle(" NNN   NNN     NbN     NNN   NNN " ,"   C   C                 C   C   " ,"   C   C                 C   C   " ,"   C   C                 C   C   " ," NNN   NNN             NNN   NNN " ,"                                 " ,"                                 " ,"                                 " ,"                                 " ,"                                 " ," NNN   NNN             NNN   NNN " ,"   C   C                 C   C   " ,"   C   C                 C   C   " ,"   C   C                 C   C   " ," NNN   NN    N     N    NN   NNN " ,"         N   N     N   N         " ,"         NCCCN     NCCCN         " ,"                                 " ,"                                 " ,"                                 " ,"         NCCCN     NCCCN         " ,"  N      N   N     N   N      N  " ,"         N   N     N   N         " ,"                                 ")
                .aisle("NbbbNNNbbbN    NbN    NbbbNNNbbbN" ," CCCCCCCCC             CCCCCCCCC " ," CCCCCCCCC             CCCCCCCCC " ," CCCCCCCCC             CCCCCCCCC " ,"NbbbNNNbbbN           NbbbNNNbbbN" ,"  N     N               N     N  " ,"  N     N               N     N  " ,"                                 " ,"  N     N               N     N  " ,"  N     N               N     N  " ,"NbbbNNNbbbN           NbbbNNNbbbN" ," CCCCCCCCC             CCCCCCCCC " ," CCCCCCCCC             CCCCCCCCC " ," CCCCCCCCC   N     N   CCCCCCCCC " ,"NbbbNNNbbNCCCb     bCCCNbbNNNbbbN" ,"         bCCCb     bCCCb         " ,"         bCCCb     bCCCb         " ,"         NCCCN     NCCCN         " ,"         NCCCN     NCCCN         " ,"         NCCCN     NCCCN         " ,"         bCCCb     bCCCb         " ,"  N      bCCCb     bCCCb      N  " ,"         bCCCb     bCCCb         " ,"         N   N     N   N         ")
                .aisle("NbbbN NbbbNNNNNsNsNNNNNbbbN NbbbN" ," CbC   CbC             CbC   CbC " ," CbC   CbC             CbC   CbC " ," CbC   CbC             CbC   CbC " ,"NbbbN NbbbN           NbbbN NbbbN" ," NNN   NNN             NNN   NNN " ," NNN   NNN             NNN   NNN " ,"  s     s               s     s  " ," NNN   NNN             NNN   NNN " ," NNN   NNN             NNN   NNN " ,"NbbbN NbbbN           NbbbN NbbbN" ," CbC   CbC             CbC   CbC " ," CbC   CbC             CbC   CbC " ," CbC   CbC   N     N   CbC   CbC " ,"NbbbN NbbNCCCb     bCCCNbbN NbbbN" ,"  s     sbbbbbNNsNNbbbbbs     s  " ,"         bCCCb     bCCCb         " ,"         N   N     N   N         " ,"                                 " ,"         N   N     N   N         " ,"         bCCCb     bCCCb         " ,"  N     sbbbbbNNsNNbbbbbs     N  " ,"         bCCCb     bCCCb         " ,"         N   N     N   N         ")
                .aisle("NbbbN NbbbN    NbN    NbbbN NbbbN" ," CCC   CCC             CCC   CCC " ," CCC   CCC             CCC   CCC " ," CCC   CCC             CCC   CCC " ,"NbbbN NbbbN           NbbbN NbbbN" ,"  N     N               N     N  " ,"  N     N               N     N  " ,"                                 " ,"  N     N               N     N  " ,"  N     N               N     N  " ,"NbbbN NbbbN           NbbbN NbbbN" ," CCC   CCC             CCC   CCC " ," CCC   CCC             CCC   CCC " ," CCC   CCC   N     N   CCC   CCC " ,"NNNN   NNNCCCb     bCCCNNN   NNNN" ,"NbbbN NbbNCCCb     bCCCNbbN NbbbN" ,"NbbbNNNbbNCCCb     bCCCNbbNNNbbbN" ," NNN   NNN   N     N   NNN   NNN " ,"   N   N                 N   N   " ," NNN   NNN   N     N   NNN   NNN " ,"NbbbNNNbbNCCCb     bCCCNbbNNNbbbN" ,"NbbbN NbbNCCCb     bCCCNbbN NbbbN" ,"NbbbN NbbNCCCb     bCCCNbbN NbbbN" ," NNN   NNN   N     N   NNN   NNN ")
                .aisle(" NNN   NNN     NbN     NNN   NNN " ,"                                 " ,"                                 " ,"                                 " ," NNN   NNN             NNN   NNN " ,"                                 " ,"                                 " ,"                                 " ,"                                 " ,"                                 " ," NNN   NNN             NNN   NNN " ,"                                 " ,"                                 " ,"                                 " ," CCC   CCC   N     N   CCC   CCC " ," CbC   CbC   N     N   CbC   CbC " ," CCCCCCCCC   N     N   CCCCCCCCC " ,"   C   C                 C   C   " ,"   C   C                 C   C   " ,"   C   C                 C   C   " ," CCCCCCCCC   N     N   CCCCCCCCC " ," CbC   CbC   N     N   CbC   CbC " ," CCC   CCC   N     N   CCC   CCC " ,"                                 ")
                .aisle("  N     N      NbbC   CbC             CbC   CbC " ," CCCCCCCCC             CCCCCCCCC " ,"   C   C                 C   C   " ,"   C   C                 C   C   " ,"   C   C                 C   C   " ," CCCCCCCCC             CCCCCCCCC " ," CbC   CbC             CbC   CbC " ," CCC   CCC             CCC   CCC " ,"                                 ")
                .aisle("  N     N      NbN      N     N  " ,"                                 " ,"                                 " ,"                                 " ,"                                 " ,"                                 " ,"                                 " ,"                                 " ,"                                 " ,"                                 " ,"                                 " ,"                                 " ,"                                 " ,"                                 " ," CCC   CCC             CCC   CCC " ," CbC   CbC             CbC   CbC " ," CCCCCCCCC             CCCCCCCCC " ,"   C   C                 C   C   " ,"   C   C                 C   C   " ,"   C   C                 C   C   " ," CCCCCCCCC             CCCCCCCCC " ," CbC   CbC             CbC   CbC " ," CCC   CCC             CCC   CCC " ,"                                 ")
                .aisle("  N     N     NsNsN     N     N  " ,"                                 " ,"                                 " ,"                                 " ,"                                 " ,"                                 " ,"                                 " ,"                                 " ,"                                 " ,"                                 " ,"                                 " ,"                                 " ,"                                 " ," NNN   NNN             NNN   NNN " ,"NbbbN NbbbN           NbbbN NbbbN" ,"NbbbN NbbbN           NbbbN NbbbN" ,"NbbbNNNbbbN           NbbbNNNbbbN" ," NNN   NNN             NNN   NNN " ,"   N   N                 N   N   " ," NNN   NNN             NNN   NNN " ,"NbbbNNNbbbN           NbbbNNNbbbN" ,"NbbbN NbbbN           NbbbN NbbbN" ,"NbbbN NbbbN           NbbbN NbbbN" ," NNN   NNN             NNN   NNN ")
                .aisle("  N     N    Nbbbbb
                .aisle(" NsNNNNNsNNNNsbbbbbsNNNNsNNNNNs
                .aisle("  NbbbbbNbbbbNbbbbbNbbbbNbbbbbN  " ,"               NNN               " ,"                ~                " ,"                                 " ,"                                 " ,"                                 " ,"                                 " ,"                                 " ,"                                 " ,"                                 " ,"                                 " ,"                                 " ,"                                 " ,"                                 " ,"                                 " ,"  s     s               s     s  " ,"                                 " ,"                                 " ,"                                 " ,"                                 " ,"                                 " ,"  s     s               s     s  " ,"                                 " ,"                                 ")
                .aisle(" NsNNNNNsNNNNsbbbbbsNNNNsNNNNNs
                .aisle("  N     N    Nbbbbb
                .aisle("  N     N     NsNsN     N     N  " ,"                                 " ,"                                 " ,"                                 " ,"                                 " ,"                                 " ,"                                 " ,"                                 " ,"                                 " ,"                                 " ,"                                 " ,"                                 " ,"                                 " ," NNN   NNN             NNN   NNN " ,"NbbbN NbbbN           NbbbN NbbbN" ,"NbbbN NbbbN           NbbbN NbbbN" ,"NbbbNNNbbbN           NbbbNNNbbbN" ," NNN   NNN             NNN   NNN " ,"   N   N                 N   N   " ," NNN   NNN             NNN   NNN " ,"NbbbNNNbbbN           NbbbNNNbbbN" ,"NbbbN NbbbN           NbbbN NbbbN" ,"NbbbN NbbbN           NbbbN NbbbN" ," NNN   NNN             NNN   NNN ")
                .aisle("  N     N      NbbC   CbC             CbC   CbC " ," CCCCCCCCC             CCCCCCCCC " ,"   C   C                 C   C   " ,"   C   C                 C   C   " ,"   C   C                 C   C   " ," CCCCCCCCC             CCCCCCCCC " ," CbC   CbC             CbC   CbC " ," CCC   CCC             CCC   CCC " ,"                                 ")
                .aisle("  N     N      NbbC   CbC             CbC   CbC " ," CCCCCCCCC             CCCCCCCCC " ,"   C   C                 C   C   " ,"   C   C                 C   C   " ,"   C   C                 C   C   " ," CCCCCCCCC             CCCCCCCCC " ," CbC   CbC             CbC   CbC " ," CCC   CCC             CCC   CCC " ,"                                 ")
                .aisle(" NNN   NNN     NbN     NNN   NNN " ,"                                 " ,"                                 " ,"                                 " ," NNN   NNN             NNN   NNN " ,"                                 " ,"                                 " ,"                                 " ,"                                 " ,"                                 " ," NNN   NNN             NNN   NNN " ,"                                 " ,"                                 " ,"                                 " ," CCC   CCC   N     N   CCC   CCC " ," CbC   CbC   N     N   CbC   CbC " ," CCCCCCCCC   N     N   CCCCCCCCC " ,"   C   C                 C   C   " ,"   C   C                 C   C   " ,"   C   C                 C   C   " ," CCCCCCCCC   N     N   CCCCCCCCC " ," CbC   CbC   N     N   CbC   CbC " ," CCC   CCC   N     N   CCC   CCC " ,"                                 ")
                .aisle("NbbbN NbbbN    NbN    NbbbN NbbbN" ," CCC   CCC             CCC   CCC " ," CCC   CCC             CCC   CCC " ," CCC   CCC             CCC   CCC " ,"NbbbN NbbbN           NbbbN NbbbN" ,"  N     N               N     N  " ,"  N     N               N     N  " ,"                                 " ,"  N     N               N     N  " ,"  N     N               N     N  " ,"NbbbN NbbbN           NbbbN NbbbN" ," CCC   CCC             CCC   CCC " ," CCC   CCC             CCC   CCC " ," CCC   CCC   N     N   CCC   CCC " ,"NNNN   NNNCCCb     bCCCNNN   NNNN" ,"NbbbN NbbNCCCb     bCCCNbbN NbbbN" ,"NbbbNNNbbNCCCb     bCCCNbbNNNbbbN" ," NNN   NNN   N     N   NNN   NNN " ,"   N   N                 N   N   " ," NNN   NNN   N     N   NNN   NNN " ,"NbbbNNNbbNCCCb     bCCCNbbNNNbbbN" ,"NbbbN NbbNCCCb     bCCCNbbN NbbbN" ,"NbbbN NbbNCCCb     bCCCNbbN NbbbN" ," NNN   NNN   N     N   NNN   NNN ")
                .aisle("NbbbN NbbbNNNNNsNsNNNNNbbbN NbbbN" ," CbC   CbC             CbC   CbC " ," CbC   CbC             CbC   CbC " ," CbC   CbC             CbC   CbC " ,"NbbbN NbbbN           NbbbN NbbbN" ," NNN   NNN             NNN   NNN " ," NNN   NNN             NNN   NNN " ,"  s     s               s     s  " ," NNN   NNN             NNN   NNN " ," NNN   NNN             NNN   NNN " ,"NbbbN NbbbN           NbbbN NbbbN" ," CbC   CbC             CbC   CbC " ," CbC   CbC             CbC   CbC " ," CbC   CbC   N     N   CbC   CbC " ,"NbbbN NbbNCCCb     bCCCNbbN NbbbN" ,"  s     sbbbbbNNsNNbbbbbs     s  " ,"         bCCCb     bCCCb         " ,"         N   N     N   N         " ,"                                 " ,"         N   N     N   N         " ,"         bCCCb     bCCCb         " ,"  N     sbbbbbNNsNNbbbbbs     N  " ,"         bCCCb     bCCCb         " ,"         N   N     N   N         ")
                .aisle("NbbbNNNbbbN    NbN    NbbbNNNbbbN" ," CCCCCCCCC             CCCCCCCCC " ," CCCCCCCCC             CCCCCCCCC " ," CCCCCCCCC             CCCCCCCCC " ,"NbbbNNNbbbN           NbbbNNNbbbN" ,"  N     N               N     N  " ,"  N     N               N     N  " ,"                                 " ,"  N     N               N     N  " ,"  N     N               N     N  " ,"NbbbNNNbbbN           NbbbNNNbbbN" ," CCCCCCCCC             CCCCCCCCC " ," CCCCCCCCC             CCCCCCCCC " ," CCCCCCCCC   N     N   CCCCCCCCC " ,"NbbbNNNbbNCCCb     bCCCNbbNNNbbbN" ,"         bCCCb     bCCCb         " ,"         bCCCb     bCCCb         " ,"         NCCCN     NCCCN         " ,"         NCCCN     NCCCN         " ,"         NCCCN     NCCCN         " ,"         bCCCb     bCCCb         " ,"  N      bCCCb     bCCCb      N  " ,"         bCCCb     bCCCb         " ,"         N   N     N   N         ")
                .aisle(" NNN   NNN     NbN     NNN   NNN " ,"   C   C                 C   C   " ,"   C   C                 C   C   " ,"   C   C                 C   C   " ," NNN   NNN             NNN   NNN " ,"                                 " ,"                                 " ,"                                 " ,"                                 " ,"                                 " ," NNN   NNN             NNN   NNN " ,"   C   C                 C   C   " ,"   C   C                 C   C   " ,"   C   C                 C   C   " ," NNN   NN    N     N    NN   NNN " ,"         N   N     N   N         " ,"         NCCCN     NCCCN         " ,"                                 " ,"                                 " ,"                                 " ,"         NCCCN     NCCCN         " ,"  N      N   N     N   N      N  " ,"         N   N     N   N         " ,"                                 ")
                .aisle("   N   N       NbN       N   N   " ,"   C   C                 C   C   " ,"   C   C                 C   C   " ,"   C   C                 C   C   " ,"   N   N                 N   N   " ,"                                 " ,"                                 " ,"                                 " ,"                                 " ,"                                 " ,"   N   N                 N   N   " ,"   C   C                 C   C   " ,"   C   C                 C   C   " ,"   C   C                 C   C   " ,"   N   N                 N   N   " ,"                                 " ,"         NCCCN     NCCCN         " ,"                                 " ,"                                 " ,"                                 " ,"  s      NCCCN     NCCCN      s  " ,"   s                         s   " ,"                                 " ,"                                 ")
                .aisle(" NNN   NNN     NbN     NNN   NNN " ,"   C   C                 C   C   " ,"   C   C                 C   C   " ,"   C   C                 C   C   " ," NNN   NNN             NNN   NNN " ,"                                 " ,"                                 " ,"                                 " ,"                                 " ,"                                 " ," NNN   NNN             NNN   NNN " ,"   C   C                 C   C   " ,"   C   C                 C   C   " ,"   C   C                 C   C   " ," NNN   NN    N     N    NN   NNN " ,"         N   N     N   N         " ,"         NCCCN     NCCCN         " ,"                                 " ,"                                 " ,"                                 " ,"  s      NCCCN     NCCCN      s  " ,"   s     N   N     N   N     s   " ,"         N   N     N   N         " ,"                                 ")
                .aisle("NbbbNNNbbbN    NbN    NbbbNNNbbbN" ," CCCCCCCCC             CCCCCCCCC " ," CCCCCCCCC             CCCCCCCCC " ," CCCCCCCCC             CCCCCCCCC " ,"NbbbNNNbbbN           NbbbNNNbbbN" ,"  N     N               N     N  " ,"  N     N               N     N  " ,"                                 " ,"  N     N               N     N  " ,"  N     N               N     N  " ,"NbbbNNNbbbN           NbbbNNNbbbN" ," CCCCCCCCC             CCCCCCCCC " ," CCCCCCCCC             CCCCCCCCC " ," CCCCCCCCC   N     N   CCCCCCCCC " ,"NbbbNNNbbNCCCb     bCCCNbbNNNbbbN" ,"         bCCCb     bCCCb         " ,"         bCCCb     bCCCb         " ,"         NCCCN     NCCCN         " ,"  s      NCCCN     NCCCN      s  " ,"  s      NCCCN     NCCCN      s  " ,"         bCCCb     bCCCb         " ,"    ss   bCCCb     bCCCb   ss    " ,"         bCCCb     bCCCb         " ,"         N   N     N   N         ")
                .aisle("NbbbN NbbbNNNNNsNsNNNNNbbbN NbbbN" ," CbC   CbC             CbC   CbC " ," CbC   CbC             CbC   CbC " ," CbC   CbC             CbC   CbC " ,"NbbbN NbbbN           NbbbN NbbbN" ," NNN   NNN             NNN   NNN " ," NNN   NNN             NNN   NNN " ,"  s     s               s     s  " ," NNN   NNN             NNN   NNN " ," NNN   NNN             NNN   NNN " ,"NbbbN NbbbN           NbbbN NbbbN" ," CbC   CbC             CbC   CbC " ," CbC   CbC             CbC   CbC " ," CbC   CbC   N     N   CbC   CbC " ,"NbbbN NbbNCCCb     bCCCNbbN NbbbN" ,"  N     sbbbbbNNsNNbbbbbs     N  " ,"  N      bCCCb     bCCCb      N  " ,"  N      N   N     N   N      N  " ,"   s                         s   " ,"   s     N   N     N   N     s   " ,"    ss   bCCCb     bCCCb   ss    " ,"      NNNbbbbbNNsNNbbbbbNNN      " ,"         bCCCb     bCCCb         " ,"         N   N     N   N         ")
                .aisle("NbbbN NbbbN    N N    NbbbN NbbbN" ," CCC   CCC             CCC   CCC " ," CCC   CCC             CCC   CCC " ," CCC   CCC             CCC   CCC " ,"NbbbN NbbbN           NbbbN NbbbN" ,"  N     N               N     N  " ,"  N     N               N     N  " ,"                                 " ,"  N     N               N     N  " ,"  N     N               N     N  " ,"NbbbN NbbbN           NbbbN NbbbN" ," CCC   CCC             CCC   CCC " ," CCC   CCC             CCC   CCC " ," CCC   CCC   N     N   CCC   CCC " ,"NbbbN NbbNCCCb     bCCCNbbN NbbbN" ,"         bCCCb     bCCCb         " ,"         bCCCb     bCCCb         " ,"         N   N     N   N         " ,"                                 " ,"         N   N     N   N         " ,"         bCCCb     bCCCb         " ,"         bCCCb     bCCCb         " ,"         bCCCb     bCCCb         " ,"         N   N     N   N         ")
                .aisle(" NNN   NNN             NNN   NNN " ,"                                 " ,"                                 " ,"                                 " ," NNN   NNN             NNN   NNN " ,"                                 " ,"                                 " ,"                                 " ,"                                 " ,"                                 " ," NNN   NNN             NNN   NNN " ,"                                 " ,"                                 " ,"                                 " ," NNN   NNN   N     N   NNN   NNN " ,"         N   N     N   N         " ,"         N   N     N   N         " ,"                                 " ,"                                 " ,"                                 " ,"         N   N     N   N         " ,"         N   N     N   N         " ,"         N   N     N   N         " ,"                                 ")

                .where('~', selfPredicate())
                .where('C', states(getFrameState()))
                .where('N', states(getCasingState())
                        .or(autoAbilities().setMaxGlobalLimited(20))
                )
                .where('b', states(getBoilerState()))
                .where('s', states(getPipeState()))
                .where(' ', any())
                .build();
    }
    private static IBlockState getFrameState() {
        return ConfigHolder.machines.steelSteamMultiblocks ?
                MetaBlocks.FRAMES.get(Materials.Steel).getBlock(Materials.Steel):
                MetaBlocks.FRAMES.get(Materials.Bronze).getBlock(Materials.Bronze);
    }
    private IBlockState getPipeState() {
        return ConfigHolder.machines.steelSteamMultiblocks ?
                MetaBlocks.BOILER_CASING.getState(STEEL_PIPE) :
                MetaBlocks.BOILER_CASING.getState(BRONZE_PIPE);
    }
    private static IBlockState getBoilerState() {
        return ConfigHolder.machines.steelSteamMultiblocks ?
                MetaBlocks.BOILER_FIREBOX_CASING.getState(BlockFireboxCasing.FireboxCasingType.STEEL_FIREBOX):
                MetaBlocks.BOILER_FIREBOX_CASING.getState(BlockFireboxCasing.FireboxCasingType.BRONZE_FIREBOX);
    }
    public IBlockState getCasingState() {
        return ConfigHolder.machines.steelSteamMultiblocks ?
                MetaBlocks.METAL_CASING.getState(BlockMetalCasing.MetalCasingType.STEEL_SOLID) :
                MetaBlocks.METAL_CASING.getState(BlockMetalCasing.MetalCasingType.BRONZE_BRICKS);
    }

    @SideOnly(Side.CLIENT)
    @Override
    public ICubeRenderer getBaseTexture(IMultiblockPart sourcePart) {
        return ConfigHolder.machines.steelSteamMultiblocks ? SOLID_STEEL_CASING : BRONZE_PLATED_BRICKS;
    }

    @SideOnly(Side.CLIENT)
    @Override
    protected ICubeRenderer getFrontOverlay() {
        return Textures.FUSION_REACTOR_OVERLAY;
    }

    @Override
    public boolean hasMaintenanceMechanics() {
        return false;
    }


    @Override
    public void addInformation(ItemStack stack, World player, List<String> tooltip,
                               boolean advanced) {
        super.addInformation(stack, player, tooltip, advanced);
        tooltip.add(I18n.format("gregtech.multiblock.steam_.duration_modifier"));
        tooltip.add(I18n.format("gregtech.universal.tooltip.parallel", PARALLEL_LIMIT));
        tooltip.add(TooltipHelper.BLINKING_ORANGE + I18n.format("gregtech.multiblock.require_steam_parts"));
    }
}